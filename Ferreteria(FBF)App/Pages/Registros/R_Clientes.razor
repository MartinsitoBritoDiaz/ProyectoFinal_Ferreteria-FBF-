@page "/Clientes"
@page "/Clientes/{ClienteId:int}"

@using BLL
@using Models
@inject IToastService toast 

<EditForm Model="Cliente" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card border-danger">
        <div class="card-header bg-danger text-lg-center">
            <h2 style="font-family :'Segoe UI'">Registro de Clientes</h2>
        </div>

        <div class="card-body">
            <div class="form">

                @*Cliente Id*@
                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group">
                            <label>Cliente Id</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="Cliente.ClienteId" class="form-control col-3" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">
                                        <span class="oi oi-magnifying-glass" aria-hidden="true"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group form-row">

                    @*Nombre*@
                    <div class="col-6">
                        <div class="form-group">
                            <label>Nombre</label>
                            <InputText @bind-Value="Cliente.Nombre" class="form-control" />
                            <ValidationMessage For="@(() => Cliente.Nombre)" />
                        </div>
                    </div>

                    @*Apellido*@
                    <div class="col-6">
                        <div class="form-group">
                            <label>Apellido</label>
                            <InputText @bind-Value="Cliente.Apellido" class="form-control" />
                            <ValidationMessage For="@(() => Cliente.Apellido)" />
                        </div>
                    </div>
                </div>

                @*Cedula*@
                <div class="form-group">
                    <label>Cedula</label>
                    <InputText @bind-Value="Cliente.Cedula" class="form-control" />
                    <ValidationMessage For="@(() => Cliente.Cedula)" />
                </div>

                @*Dirección*@
                <div class="form-group">
                    <label>Dirección</label>
                    <InputText @bind-Value="Cliente.Dirección" class="form-control" />
                    <ValidationMessage For="@(() => Cliente.Dirección)" />
                </div>

                @*Telefono*@
                <div class="form-group">
                    <label>Telefono</label>
                    <InputText @bind-Value="Cliente.Telefono" class="form-control" />
                    <ValidationMessage For="@(() => Cliente.Telefono)" />
                </div>

                @*Limite de credito*@
                <div class="form-group">
                    <label>Limite de Credito</label>
                    <InputNumber @bind-Value="Cliente.LimiteCredito" class="form-control" />
                    <ValidationMessage For="@(() => Cliente.LimiteCredito)"/>
                </div>

                @*Balance*@
                <div class="form-group">
                    <label>Balance</label>
                    <InputNumber @bind-Value="Cliente.Balance" class="form-control" readonly />
                </div>
            </div>
        </div>

        <div class="card-footer text-center" display: inline-block>
            <div class="form-group">

                <button type="button" class="btn btn-lg btn-secondary" @onclick="Nuevo">
                    <span class="oi oi-plus" aria-hidden="true"></span> Nuevo
                </button>

                <button type="submit" class="btn btn-lg btn-info">
                    <span class="oi oi-circle-check" aria-hidden="true"></span> Guardar
                </button>

                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                    <span class="oi oi-circle-x"></span> Eliminar
                </button>
            </div>
        </div>

    </div>
</EditForm>

@code {
    [Parameter]
    public int ClienteId { get; set; }

    private Clientes Cliente = new Clientes();

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();
    }

    public void Nuevo()
    {
        Cliente = new Clientes();
    }

    public void Buscar()
    {

        if (Cliente.ClienteId > 0)
        {
            var encontrado = ClientesBLL.Buscar(Cliente.ClienteId);

            if (encontrado != null)
                this.Cliente = encontrado;
            else
                toast.ShowWarning("Cliente no encontrada");
        }
    }

    public void Guardar()
    {
        bool guardo = false;

        if (Cliente.ClienteId >= 0)
        {
            guardo = ClientesBLL.Guardar(Cliente);

            if (guardo)
            {
                Nuevo();
                toast.ShowSuccess("Guardado exitosamente");
            }
            else
                toast.ShowError("No fue posible guardo");
        }
    }

    public void Eliminar()
    {
        bool eliminar = false;

        eliminar = ClientesBLL.Eliminar(Cliente.ClienteId);

        if (eliminar)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("!No fue posible eliminar!");
    }
}
